#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QL_Kho.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HangTon")]
	public partial class KhohangDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void UpdateCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void DeleteCTPHIEUNHAP(CTPHIEUNHAP instance);
    partial void InsertCTPHIEUXUAT(CTPHIEUXUAT instance);
    partial void UpdateCTPHIEUXUAT(CTPHIEUXUAT instance);
    partial void DeleteCTPHIEUXUAT(CTPHIEUXUAT instance);
    partial void InsertDiadiem(Diadiem instance);
    partial void UpdateDiadiem(Diadiem instance);
    partial void DeleteDiadiem(Diadiem instance);
    partial void InsertKhoHang(KhoHang instance);
    partial void UpdateKhoHang(KhoHang instance);
    partial void DeleteKhoHang(KhoHang instance);
    partial void InsertLoai(Loai instance);
    partial void UpdateLoai(Loai instance);
    partial void DeleteLoai(Loai instance);
    partial void InsertMathang(Mathang instance);
    partial void UpdateMathang(Mathang instance);
    partial void DeleteMathang(Mathang instance);
    partial void InsertNhanvien(Nhanvien instance);
    partial void UpdateNhanvien(Nhanvien instance);
    partial void DeleteNhanvien(Nhanvien instance);
    partial void InsertPhieunhap(Phieunhap instance);
    partial void UpdatePhieunhap(Phieunhap instance);
    partial void DeletePhieunhap(Phieunhap instance);
    partial void InsertPhieuxuat(Phieuxuat instance);
    partial void UpdatePhieuxuat(Phieuxuat instance);
    partial void DeletePhieuxuat(Phieuxuat instance);
    #endregion
		
		public KhohangDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HangTonConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KhohangDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhohangDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhohangDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KhohangDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this.GetTable<CTPHIEUNHAP>();
			}
		}
		
		public System.Data.Linq.Table<CTPHIEUXUAT> CTPHIEUXUATs
		{
			get
			{
				return this.GetTable<CTPHIEUXUAT>();
			}
		}
		
		public System.Data.Linq.Table<Diadiem> Diadiems
		{
			get
			{
				return this.GetTable<Diadiem>();
			}
		}
		
		public System.Data.Linq.Table<KhoHang> KhoHangs
		{
			get
			{
				return this.GetTable<KhoHang>();
			}
		}
		
		public System.Data.Linq.Table<Loai> Loais
		{
			get
			{
				return this.GetTable<Loai>();
			}
		}
		
		public System.Data.Linq.Table<Mathang> Mathangs
		{
			get
			{
				return this.GetTable<Mathang>();
			}
		}
		
		public System.Data.Linq.Table<Nhanvien> Nhanviens
		{
			get
			{
				return this.GetTable<Nhanvien>();
			}
		}
		
		public System.Data.Linq.Table<Phieunhap> Phieunhaps
		{
			get
			{
				return this.GetTable<Phieunhap>();
			}
		}
		
		public System.Data.Linq.Table<Phieuxuat> Phieuxuats
		{
			get
			{
				return this.GetTable<Phieuxuat>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUNHAP")]
	public partial class CTPHIEUNHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Manhap;
		
		private int _MaMH;
		
		private double _SoluongNhap;
		
		private double _Gianhap;
		
		private double _Tongtien;
		
		private EntityRef<Mathang> _Mathang;
		
		private EntityRef<Phieunhap> _Phieunhap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnManhapChanging(int value);
    partial void OnManhapChanged();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnSoluongNhapChanging(double value);
    partial void OnSoluongNhapChanged();
    partial void OnGianhapChanging(double value);
    partial void OnGianhapChanged();
    partial void OnTongtienChanging(double value);
    partial void OnTongtienChanged();
    #endregion
		
		public CTPHIEUNHAP()
		{
			this._Mathang = default(EntityRef<Mathang>);
			this._Phieunhap = default(EntityRef<Phieunhap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manhap", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Manhap
		{
			get
			{
				return this._Manhap;
			}
			set
			{
				if ((this._Manhap != value))
				{
					if (this._Phieunhap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManhapChanging(value);
					this.SendPropertyChanging();
					this._Manhap = value;
					this.SendPropertyChanged("Manhap");
					this.OnManhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._Mathang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoluongNhap", DbType="Float NOT NULL")]
		public double SoluongNhap
		{
			get
			{
				return this._SoluongNhap;
			}
			set
			{
				if ((this._SoluongNhap != value))
				{
					this.OnSoluongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoluongNhap = value;
					this.SendPropertyChanged("SoluongNhap");
					this.OnSoluongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gianhap", DbType="Float NOT NULL")]
		public double Gianhap
		{
			get
			{
				return this._Gianhap;
			}
			set
			{
				if ((this._Gianhap != value))
				{
					this.OnGianhapChanging(value);
					this.SendPropertyChanging();
					this._Gianhap = value;
					this.SendPropertyChanged("Gianhap");
					this.OnGianhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tongtien", DbType="Float NOT NULL")]
		public double Tongtien
		{
			get
			{
				return this._Tongtien;
			}
			set
			{
				if ((this._Tongtien != value))
				{
					this.OnTongtienChanging(value);
					this.SendPropertyChanging();
					this._Tongtien = value;
					this.SendPropertyChanged("Tongtien");
					this.OnTongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mathang_CTPHIEUNHAP", Storage="_Mathang", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public Mathang Mathang
		{
			get
			{
				return this._Mathang.Entity;
			}
			set
			{
				Mathang previousValue = this._Mathang.Entity;
				if (((previousValue != value) 
							|| (this._Mathang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mathang.Entity = null;
						previousValue.CTPHIEUNHAPs.Remove(this);
					}
					this._Mathang.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNHAPs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(int);
					}
					this.SendPropertyChanged("Mathang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phieunhap_CTPHIEUNHAP", Storage="_Phieunhap", ThisKey="Manhap", OtherKey="MaNhap", IsForeignKey=true)]
		public Phieunhap Phieunhap
		{
			get
			{
				return this._Phieunhap.Entity;
			}
			set
			{
				Phieunhap previousValue = this._Phieunhap.Entity;
				if (((previousValue != value) 
							|| (this._Phieunhap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phieunhap.Entity = null;
						previousValue.CTPHIEUNHAPs.Remove(this);
					}
					this._Phieunhap.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUNHAPs.Add(this);
						this._Manhap = value.MaNhap;
					}
					else
					{
						this._Manhap = default(int);
					}
					this.SendPropertyChanged("Phieunhap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPHIEUXUAT")]
	public partial class CTPHIEUXUAT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maxuat;
		
		private int _MaMH;
		
		private double _SoluongXuat;
		
		private double _GiaXuat;
		
		private double _TongTien;
		
		private EntityRef<Mathang> _Mathang;
		
		private EntityRef<Phieuxuat> _Phieuxuat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaxuatChanging(int value);
    partial void OnMaxuatChanged();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnSoluongXuatChanging(double value);
    partial void OnSoluongXuatChanged();
    partial void OnGiaXuatChanging(double value);
    partial void OnGiaXuatChanged();
    partial void OnTongTienChanging(double value);
    partial void OnTongTienChanged();
    #endregion
		
		public CTPHIEUXUAT()
		{
			this._Mathang = default(EntityRef<Mathang>);
			this._Phieuxuat = default(EntityRef<Phieuxuat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maxuat", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maxuat
		{
			get
			{
				return this._Maxuat;
			}
			set
			{
				if ((this._Maxuat != value))
				{
					if (this._Phieuxuat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaxuatChanging(value);
					this.SendPropertyChanging();
					this._Maxuat = value;
					this.SendPropertyChanged("Maxuat");
					this.OnMaxuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					if (this._Mathang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoluongXuat", DbType="Float NOT NULL")]
		public double SoluongXuat
		{
			get
			{
				return this._SoluongXuat;
			}
			set
			{
				if ((this._SoluongXuat != value))
				{
					this.OnSoluongXuatChanging(value);
					this.SendPropertyChanging();
					this._SoluongXuat = value;
					this.SendPropertyChanged("SoluongXuat");
					this.OnSoluongXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaXuat", DbType="Float NOT NULL")]
		public double GiaXuat
		{
			get
			{
				return this._GiaXuat;
			}
			set
			{
				if ((this._GiaXuat != value))
				{
					this.OnGiaXuatChanging(value);
					this.SendPropertyChanging();
					this._GiaXuat = value;
					this.SendPropertyChanged("GiaXuat");
					this.OnGiaXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float NOT NULL")]
		public double TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mathang_CTPHIEUXUAT", Storage="_Mathang", ThisKey="MaMH", OtherKey="MaMH", IsForeignKey=true)]
		public Mathang Mathang
		{
			get
			{
				return this._Mathang.Entity;
			}
			set
			{
				Mathang previousValue = this._Mathang.Entity;
				if (((previousValue != value) 
							|| (this._Mathang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Mathang.Entity = null;
						previousValue.CTPHIEUXUATs.Remove(this);
					}
					this._Mathang.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUXUATs.Add(this);
						this._MaMH = value.MaMH;
					}
					else
					{
						this._MaMH = default(int);
					}
					this.SendPropertyChanged("Mathang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phieuxuat_CTPHIEUXUAT", Storage="_Phieuxuat", ThisKey="Maxuat", OtherKey="MaXuat", IsForeignKey=true)]
		public Phieuxuat Phieuxuat
		{
			get
			{
				return this._Phieuxuat.Entity;
			}
			set
			{
				Phieuxuat previousValue = this._Phieuxuat.Entity;
				if (((previousValue != value) 
							|| (this._Phieuxuat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phieuxuat.Entity = null;
						previousValue.CTPHIEUXUATs.Remove(this);
					}
					this._Phieuxuat.Entity = value;
					if ((value != null))
					{
						value.CTPHIEUXUATs.Add(this);
						this._Maxuat = value.MaXuat;
					}
					else
					{
						this._Maxuat = default(int);
					}
					this.SendPropertyChanged("Phieuxuat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diadiem")]
	public partial class Diadiem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDD;
		
		private string _TenDD;
		
		private int _Quanly;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntityRef<Nhanvien> _Nhanvien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnTenDDChanging(string value);
    partial void OnTenDDChanged();
    partial void OnQuanlyChanging(int value);
    partial void OnQuanlyChanged();
    #endregion
		
		public Diadiem()
		{
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._Nhanvien = default(EntityRef<Nhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDD", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDD
		{
			get
			{
				return this._TenDD;
			}
			set
			{
				if ((this._TenDD != value))
				{
					this.OnTenDDChanging(value);
					this.SendPropertyChanging();
					this._TenDD = value;
					this.SendPropertyChanged("TenDD");
					this.OnTenDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quanly", DbType="Int NOT NULL")]
		public int Quanly
		{
			get
			{
				return this._Quanly;
			}
			set
			{
				if ((this._Quanly != value))
				{
					if (this._Nhanvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnQuanlyChanging(value);
					this.SendPropertyChanging();
					this._Quanly = value;
					this.SendPropertyChanged("Quanly");
					this.OnQuanlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diadiem_KhoHang", Storage="_KhoHangs", ThisKey="MaDD", OtherKey="MaDD")]
		public EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Diadiem", Storage="_Nhanvien", ThisKey="Quanly", OtherKey="MaNV", IsForeignKey=true)]
		public Nhanvien Nhanvien
		{
			get
			{
				return this._Nhanvien.Entity;
			}
			set
			{
				Nhanvien previousValue = this._Nhanvien.Entity;
				if (((previousValue != value) 
							|| (this._Nhanvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhanvien.Entity = null;
						previousValue.Diadiems.Remove(this);
					}
					this._Nhanvien.Entity = value;
					if ((value != null))
					{
						value.Diadiems.Add(this);
						this._Quanly = value.MaNV;
					}
					else
					{
						this._Quanly = default(int);
					}
					this.SendPropertyChanged("Nhanvien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Diadiem = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Diadiem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhoHang")]
	public partial class KhoHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _TenKH;
		
		private int _MaNV;
		
		private string _Diachi;
		
		private int _MaDD;
		
		private string _SDT;
		
		private int _Loai;
		
		private EntityRef<Diadiem> _Diadiem;
		
		private EntityRef<Loai> _Loai1;
		
		private EntityRef<Nhanvien> _Nhanvien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnMaDDChanging(int value);
    partial void OnMaDDChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnLoaiChanging(int value);
    partial void OnLoaiChanged();
    #endregion
		
		public KhoHang()
		{
			this._Diadiem = default(EntityRef<Diadiem>);
			this._Loai1 = default(EntityRef<Loai>);
			this._Nhanvien = default(EntityRef<Nhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="Int NOT NULL")]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._Nhanvien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDD", DbType="Int NOT NULL")]
		public int MaDD
		{
			get
			{
				return this._MaDD;
			}
			set
			{
				if ((this._MaDD != value))
				{
					if (this._Diadiem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDDChanging(value);
					this.SendPropertyChanging();
					this._MaDD = value;
					this.SendPropertyChanged("MaDD");
					this.OnMaDDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai", DbType="Int NOT NULL")]
		public int Loai
		{
			get
			{
				return this._Loai;
			}
			set
			{
				if ((this._Loai != value))
				{
					if (this._Loai1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiChanging(value);
					this.SendPropertyChanging();
					this._Loai = value;
					this.SendPropertyChanged("Loai");
					this.OnLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Diadiem_KhoHang", Storage="_Diadiem", ThisKey="MaDD", OtherKey="MaDD", IsForeignKey=true)]
		public Diadiem Diadiem
		{
			get
			{
				return this._Diadiem.Entity;
			}
			set
			{
				Diadiem previousValue = this._Diadiem.Entity;
				if (((previousValue != value) 
							|| (this._Diadiem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Diadiem.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._Diadiem.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._MaDD = value.MaDD;
					}
					else
					{
						this._MaDD = default(int);
					}
					this.SendPropertyChanged("Diadiem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_KhoHang", Storage="_Loai1", ThisKey="Loai", OtherKey="MaLoai", IsForeignKey=true)]
		public Loai Loai1
		{
			get
			{
				return this._Loai1.Entity;
			}
			set
			{
				Loai previousValue = this._Loai1.Entity;
				if (((previousValue != value) 
							|| (this._Loai1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai1.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._Loai1.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._Loai = value.MaLoai;
					}
					else
					{
						this._Loai = default(int);
					}
					this.SendPropertyChanged("Loai1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_KhoHang", Storage="_Nhanvien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public Nhanvien Nhanvien
		{
			get
			{
				return this._Nhanvien.Entity;
			}
			set
			{
				Nhanvien previousValue = this._Nhanvien.Entity;
				if (((previousValue != value) 
							|| (this._Nhanvien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhanvien.Entity = null;
						previousValue.KhoHangs.Remove(this);
					}
					this._Nhanvien.Entity = value;
					if ((value != null))
					{
						value.KhoHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(int);
					}
					this.SendPropertyChanged("Nhanvien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loai")]
	public partial class Loai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntitySet<Mathang> _Mathangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public Loai()
		{
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._Mathangs = new EntitySet<Mathang>(new Action<Mathang>(this.attach_Mathangs), new Action<Mathang>(this.detach_Mathangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_KhoHang", Storage="_KhoHangs", ThisKey="MaLoai", OtherKey="Loai")]
		public EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Mathang", Storage="_Mathangs", ThisKey="MaLoai", OtherKey="Loai")]
		public EntitySet<Mathang> Mathangs
		{
			get
			{
				return this._Mathangs;
			}
			set
			{
				this._Mathangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Loai1 = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Loai1 = null;
		}
		
		private void attach_Mathangs(Mathang entity)
		{
			this.SendPropertyChanging();
			entity.Loai1 = this;
		}
		
		private void detach_Mathangs(Mathang entity)
		{
			this.SendPropertyChanging();
			entity.Loai1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Mathang")]
	public partial class Mathang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaMH;
		
		private string _TenMH;
		
		private System.Nullable<int> _Loai;
		
		private System.Nullable<double> _SoLuong;
		
		private System.Nullable<double> _Dongia;
		
		private EntitySet<CTPHIEUNHAP> _CTPHIEUNHAPs;
		
		private EntitySet<CTPHIEUXUAT> _CTPHIEUXUATs;
		
		private EntityRef<Loai> _Loai1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMHChanging(int value);
    partial void OnMaMHChanged();
    partial void OnTenMHChanging(string value);
    partial void OnTenMHChanged();
    partial void OnLoaiChanging(System.Nullable<int> value);
    partial void OnLoaiChanged();
    partial void OnSoLuongChanging(System.Nullable<double> value);
    partial void OnSoLuongChanged();
    partial void OnDongiaChanging(System.Nullable<double> value);
    partial void OnDongiaChanged();
    #endregion
		
		public Mathang()
		{
			this._CTPHIEUNHAPs = new EntitySet<CTPHIEUNHAP>(new Action<CTPHIEUNHAP>(this.attach_CTPHIEUNHAPs), new Action<CTPHIEUNHAP>(this.detach_CTPHIEUNHAPs));
			this._CTPHIEUXUATs = new EntitySet<CTPHIEUXUAT>(new Action<CTPHIEUXUAT>(this.attach_CTPHIEUXUATs), new Action<CTPHIEUXUAT>(this.detach_CTPHIEUXUATs));
			this._Loai1 = default(EntityRef<Loai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaMH
		{
			get
			{
				return this._MaMH;
			}
			set
			{
				if ((this._MaMH != value))
				{
					this.OnMaMHChanging(value);
					this.SendPropertyChanging();
					this._MaMH = value;
					this.SendPropertyChanged("MaMH");
					this.OnMaMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMH", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenMH
		{
			get
			{
				return this._TenMH;
			}
			set
			{
				if ((this._TenMH != value))
				{
					this.OnTenMHChanging(value);
					this.SendPropertyChanging();
					this._TenMH = value;
					this.SendPropertyChanged("TenMH");
					this.OnTenMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loai", DbType="Int")]
		public System.Nullable<int> Loai
		{
			get
			{
				return this._Loai;
			}
			set
			{
				if ((this._Loai != value))
				{
					if (this._Loai1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiChanging(value);
					this.SendPropertyChanging();
					this._Loai = value;
					this.SendPropertyChanged("Loai");
					this.OnLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Float")]
		public System.Nullable<double> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dongia", DbType="Float")]
		public System.Nullable<double> Dongia
		{
			get
			{
				return this._Dongia;
			}
			set
			{
				if ((this._Dongia != value))
				{
					this.OnDongiaChanging(value);
					this.SendPropertyChanging();
					this._Dongia = value;
					this.SendPropertyChanged("Dongia");
					this.OnDongiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mathang_CTPHIEUNHAP", Storage="_CTPHIEUNHAPs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this._CTPHIEUNHAPs;
			}
			set
			{
				this._CTPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Mathang_CTPHIEUXUAT", Storage="_CTPHIEUXUATs", ThisKey="MaMH", OtherKey="MaMH")]
		public EntitySet<CTPHIEUXUAT> CTPHIEUXUATs
		{
			get
			{
				return this._CTPHIEUXUATs;
			}
			set
			{
				this._CTPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loai_Mathang", Storage="_Loai1", ThisKey="Loai", OtherKey="MaLoai", IsForeignKey=true)]
		public Loai Loai1
		{
			get
			{
				return this._Loai1.Entity;
			}
			set
			{
				Loai previousValue = this._Loai1.Entity;
				if (((previousValue != value) 
							|| (this._Loai1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loai1.Entity = null;
						previousValue.Mathangs.Remove(this);
					}
					this._Loai1.Entity = value;
					if ((value != null))
					{
						value.Mathangs.Add(this);
						this._Loai = value.MaLoai;
					}
					else
					{
						this._Loai = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loai1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.Mathang = this;
		}
		
		private void detach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.Mathang = null;
		}
		
		private void attach_CTPHIEUXUATs(CTPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.Mathang = this;
		}
		
		private void detach_CTPHIEUXUATs(CTPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.Mathang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nhanvien")]
	public partial class Nhanvien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNV;
		
		private string _Ho;
		
		private string _Ten;
		
		private System.Nullable<bool> _Phai;
		
		private System.Nullable<System.DateTime> _Namsinh;
		
		private string _Diachi;
		
		private string _SDT;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private EntitySet<Diadiem> _Diadiems;
		
		private EntitySet<KhoHang> _KhoHangs;
		
		private EntitySet<Phieunhap> _Phieunhaps;
		
		private EntitySet<Phieuxuat> _Phieuxuats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(int value);
    partial void OnMaNVChanged();
    partial void OnHoChanging(string value);
    partial void OnHoChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnPhaiChanging(System.Nullable<bool> value);
    partial void OnPhaiChanged();
    partial void OnNamsinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNamsinhChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    #endregion
		
		public Nhanvien()
		{
			this._Diadiems = new EntitySet<Diadiem>(new Action<Diadiem>(this.attach_Diadiems), new Action<Diadiem>(this.detach_Diadiems));
			this._KhoHangs = new EntitySet<KhoHang>(new Action<KhoHang>(this.attach_KhoHangs), new Action<KhoHang>(this.detach_KhoHangs));
			this._Phieunhaps = new EntitySet<Phieunhap>(new Action<Phieunhap>(this.attach_Phieunhaps), new Action<Phieunhap>(this.detach_Phieunhaps));
			this._Phieuxuats = new EntitySet<Phieuxuat>(new Action<Phieuxuat>(this.attach_Phieuxuats), new Action<Phieuxuat>(this.detach_Phieuxuats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ho", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ho
		{
			get
			{
				return this._Ho;
			}
			set
			{
				if ((this._Ho != value))
				{
					this.OnHoChanging(value);
					this.SendPropertyChanging();
					this._Ho = value;
					this.SendPropertyChanged("Ho");
					this.OnHoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phai", DbType="Bit")]
		public System.Nullable<bool> Phai
		{
			get
			{
				return this._Phai;
			}
			set
			{
				if ((this._Phai != value))
				{
					this.OnPhaiChanging(value);
					this.SendPropertyChanging();
					this._Phai = value;
					this.SendPropertyChanged("Phai");
					this.OnPhaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Namsinh", DbType="Date")]
		public System.Nullable<System.DateTime> Namsinh
		{
			get
			{
				return this._Namsinh;
			}
			set
			{
				if ((this._Namsinh != value))
				{
					this.OnNamsinhChanging(value);
					this.SendPropertyChanging();
					this._Namsinh = value;
					this.SendPropertyChanged("Namsinh");
					this.OnNamsinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(50)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(50)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Diadiem", Storage="_Diadiems", ThisKey="MaNV", OtherKey="Quanly")]
		public EntitySet<Diadiem> Diadiems
		{
			get
			{
				return this._Diadiems;
			}
			set
			{
				this._Diadiems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_KhoHang", Storage="_KhoHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<KhoHang> KhoHangs
		{
			get
			{
				return this._KhoHangs;
			}
			set
			{
				this._KhoHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Phieunhap", Storage="_Phieunhaps", ThisKey="MaNV", OtherKey="NhanVien")]
		public EntitySet<Phieunhap> Phieunhaps
		{
			get
			{
				return this._Phieunhaps;
			}
			set
			{
				this._Phieunhaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Phieuxuat", Storage="_Phieuxuats", ThisKey="MaNV", OtherKey="NhanVien")]
		public EntitySet<Phieuxuat> Phieuxuats
		{
			get
			{
				return this._Phieuxuats;
			}
			set
			{
				this._Phieuxuats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Diadiems(Diadiem entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = this;
		}
		
		private void detach_Diadiems(Diadiem entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = null;
		}
		
		private void attach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = this;
		}
		
		private void detach_KhoHangs(KhoHang entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien = null;
		}
		
		private void attach_Phieunhaps(Phieunhap entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien1 = this;
		}
		
		private void detach_Phieunhaps(Phieunhap entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien1 = null;
		}
		
		private void attach_Phieuxuats(Phieuxuat entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien1 = this;
		}
		
		private void detach_Phieuxuats(Phieuxuat entity)
		{
			this.SendPropertyChanging();
			entity.Nhanvien1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phieunhap")]
	public partial class Phieunhap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhap;
		
		private System.DateTime _Ngaylap;
		
		private int _NhanVien;
		
		private EntitySet<CTPHIEUNHAP> _CTPHIEUNHAPs;
		
		private EntityRef<Nhanvien> _Nhanvien1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhapChanging(int value);
    partial void OnMaNhapChanged();
    partial void OnNgaylapChanging(System.DateTime value);
    partial void OnNgaylapChanged();
    partial void OnNhanVienChanging(int value);
    partial void OnNhanVienChanged();
    #endregion
		
		public Phieunhap()
		{
			this._CTPHIEUNHAPs = new EntitySet<CTPHIEUNHAP>(new Action<CTPHIEUNHAP>(this.attach_CTPHIEUNHAPs), new Action<CTPHIEUNHAP>(this.detach_CTPHIEUNHAPs));
			this._Nhanvien1 = default(EntityRef<Nhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhap", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhap
		{
			get
			{
				return this._MaNhap;
			}
			set
			{
				if ((this._MaNhap != value))
				{
					this.OnMaNhapChanging(value);
					this.SendPropertyChanging();
					this._MaNhap = value;
					this.SendPropertyChanged("MaNhap");
					this.OnMaNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaylap", DbType="Date NOT NULL")]
		public System.DateTime Ngaylap
		{
			get
			{
				return this._Ngaylap;
			}
			set
			{
				if ((this._Ngaylap != value))
				{
					this.OnNgaylapChanging(value);
					this.SendPropertyChanging();
					this._Ngaylap = value;
					this.SendPropertyChanged("Ngaylap");
					this.OnNgaylapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVien", DbType="Int NOT NULL")]
		public int NhanVien
		{
			get
			{
				return this._NhanVien;
			}
			set
			{
				if ((this._NhanVien != value))
				{
					if (this._Nhanvien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienChanging(value);
					this.SendPropertyChanging();
					this._NhanVien = value;
					this.SendPropertyChanged("NhanVien");
					this.OnNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phieunhap_CTPHIEUNHAP", Storage="_CTPHIEUNHAPs", ThisKey="MaNhap", OtherKey="Manhap")]
		public EntitySet<CTPHIEUNHAP> CTPHIEUNHAPs
		{
			get
			{
				return this._CTPHIEUNHAPs;
			}
			set
			{
				this._CTPHIEUNHAPs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Phieunhap", Storage="_Nhanvien1", ThisKey="NhanVien", OtherKey="MaNV", IsForeignKey=true)]
		public Nhanvien Nhanvien1
		{
			get
			{
				return this._Nhanvien1.Entity;
			}
			set
			{
				Nhanvien previousValue = this._Nhanvien1.Entity;
				if (((previousValue != value) 
							|| (this._Nhanvien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhanvien1.Entity = null;
						previousValue.Phieunhaps.Remove(this);
					}
					this._Nhanvien1.Entity = value;
					if ((value != null))
					{
						value.Phieunhaps.Add(this);
						this._NhanVien = value.MaNV;
					}
					else
					{
						this._NhanVien = default(int);
					}
					this.SendPropertyChanged("Nhanvien1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.Phieunhap = this;
		}
		
		private void detach_CTPHIEUNHAPs(CTPHIEUNHAP entity)
		{
			this.SendPropertyChanging();
			entity.Phieunhap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phieuxuat")]
	public partial class Phieuxuat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaXuat;
		
		private System.DateTime _Ngaylap;
		
		private int _NhanVien;
		
		private EntitySet<CTPHIEUXUAT> _CTPHIEUXUATs;
		
		private EntityRef<Nhanvien> _Nhanvien1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaXuatChanging(int value);
    partial void OnMaXuatChanged();
    partial void OnNgaylapChanging(System.DateTime value);
    partial void OnNgaylapChanged();
    partial void OnNhanVienChanging(int value);
    partial void OnNhanVienChanged();
    #endregion
		
		public Phieuxuat()
		{
			this._CTPHIEUXUATs = new EntitySet<CTPHIEUXUAT>(new Action<CTPHIEUXUAT>(this.attach_CTPHIEUXUATs), new Action<CTPHIEUXUAT>(this.detach_CTPHIEUXUATs));
			this._Nhanvien1 = default(EntityRef<Nhanvien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXuat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaXuat
		{
			get
			{
				return this._MaXuat;
			}
			set
			{
				if ((this._MaXuat != value))
				{
					this.OnMaXuatChanging(value);
					this.SendPropertyChanging();
					this._MaXuat = value;
					this.SendPropertyChanged("MaXuat");
					this.OnMaXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaylap", DbType="Date NOT NULL")]
		public System.DateTime Ngaylap
		{
			get
			{
				return this._Ngaylap;
			}
			set
			{
				if ((this._Ngaylap != value))
				{
					this.OnNgaylapChanging(value);
					this.SendPropertyChanging();
					this._Ngaylap = value;
					this.SendPropertyChanged("Ngaylap");
					this.OnNgaylapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhanVien", DbType="Int NOT NULL")]
		public int NhanVien
		{
			get
			{
				return this._NhanVien;
			}
			set
			{
				if ((this._NhanVien != value))
				{
					if (this._Nhanvien1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNhanVienChanging(value);
					this.SendPropertyChanging();
					this._NhanVien = value;
					this.SendPropertyChanged("NhanVien");
					this.OnNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phieuxuat_CTPHIEUXUAT", Storage="_CTPHIEUXUATs", ThisKey="MaXuat", OtherKey="Maxuat")]
		public EntitySet<CTPHIEUXUAT> CTPHIEUXUATs
		{
			get
			{
				return this._CTPHIEUXUATs;
			}
			set
			{
				this._CTPHIEUXUATs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Nhanvien_Phieuxuat", Storage="_Nhanvien1", ThisKey="NhanVien", OtherKey="MaNV", IsForeignKey=true)]
		public Nhanvien Nhanvien1
		{
			get
			{
				return this._Nhanvien1.Entity;
			}
			set
			{
				Nhanvien previousValue = this._Nhanvien1.Entity;
				if (((previousValue != value) 
							|| (this._Nhanvien1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Nhanvien1.Entity = null;
						previousValue.Phieuxuats.Remove(this);
					}
					this._Nhanvien1.Entity = value;
					if ((value != null))
					{
						value.Phieuxuats.Add(this);
						this._NhanVien = value.MaNV;
					}
					else
					{
						this._NhanVien = default(int);
					}
					this.SendPropertyChanged("Nhanvien1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPHIEUXUATs(CTPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.Phieuxuat = this;
		}
		
		private void detach_CTPHIEUXUATs(CTPHIEUXUAT entity)
		{
			this.SendPropertyChanging();
			entity.Phieuxuat = null;
		}
	}
}
#pragma warning restore 1591
